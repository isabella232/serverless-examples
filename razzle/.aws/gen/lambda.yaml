AWSTemplateFormatVersion: '2010-09-09'
Description: A starter AWS Lambda function.
Resources:
  ServerlessRestApi:
    Properties:
      Body:
        info:
          title:
            Ref: AWS::StackName
          version: '1.0'
        paths:
          /render-test:
            get:
              responses: {}
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${helloworld.Arn}/invocations
        swagger: '2.0'
      MinimumCompressionSize: 0
    Type: AWS::ApiGateway::RestApi
  ServerlessRestApiDeploymentc3f217c6f1:
    Properties:
      Description: 'RestApi deployment id: c3f217c6f10e6a04629e51820856b520a84a99e9'
      RestApiId:
        Ref: ServerlessRestApi
      StageName: Stage
    Type: AWS::ApiGateway::Deployment
  ServerlessRestApiProdStage:
    Properties:
      CacheClusterEnabled: true
      CacheClusterSize: '0.5'
      DeploymentId:
        Ref: ServerlessRestApiDeploymentc3f217c6f1
      MethodSettings:
      - CacheTtlInSeconds: 300
        CachingEnabled: true
        HttpMethod: GET
        ResourcePath: /render-test
      RestApiId:
        Ref: ServerlessRestApi
      StageName: Prod
    Type: AWS::ApiGateway::Stage
  helloworld:
    Properties:
      Code:
        S3Bucket: lambda-serverless-examples-razzle
        S3Key: 2e9c959c1397263adda3aa8ebcebb4ae
      Description: Starter AWS Lambda function with dev-toolkit.
      Handler: handler.render
      MemorySize: 256
      Role:
        Fn::GetAtt:
        - helloworldRole
        - Arn
      Runtime: nodejs8.10
      Tags:
      - Key: lambda:createdBy
        Value: SAM
      Timeout: 40
      TracingConfig:
        Mode: Active
    Type: AWS::Lambda::Function
  helloworldHelloWorldSamAPIPermissionProd:
    Properties:
      Action: lambda:invokeFunction
      FunctionName:
        Ref: helloworld
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub:
        - arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/render-test
        - __ApiId__:
            Ref: ServerlessRestApi
          __Stage__: Prod
    Type: AWS::Lambda::Permission
  helloworldHelloWorldSamAPIPermissionTest:
    Properties:
      Action: lambda:invokeFunction
      FunctionName:
        Ref: helloworld
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub:
        - arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/render-test
        - __ApiId__:
            Ref: ServerlessRestApi
          __Stage__: '*'
    Type: AWS::Lambda::Permission
  helloworldRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - xray:*
            Effect: Allow
            Resource:
            - Fn::Sub: '*'
          Version: 2012-10-17
        PolicyName: AllowXRayPermission
    Type: AWS::IAM::Role
